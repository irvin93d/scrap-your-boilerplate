/* tslint:disable */
// generated by typescript-json-validator
import Ajv from 'ajv'
import { inspect } from 'util'

import { Salary } from './Salary'
export const ajv = new Ajv({
  allErrors: true,
  coerceTypes: false,
  format: 'fast',
  nullable: true,
  unicode: true,
  uniqueItems: true,
  useDefaults: true,
})

ajv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-06.json'))

export const SalarySchema = {
  $schema: 'http://json-schema.org/draft-07/schema#',
  defaultProperties: [],
  properties: {
    type: {
      enum: ['salary'],
      type: 'string',
    },
    value: {
      type: 'number',
    },
  },
  required: ['type', 'value'],
  type: 'object',
}
export type ValidateFunction<T> = ((data: unknown) => data is T) &
  Pick<Ajv.ValidateFunction, 'errors'>
export const isSalary = ajv.compile(SalarySchema) as ValidateFunction<Salary>
export function validateSalary(value: unknown): Salary {
  if (isSalary(value)) {
    return value
  } else {
    throw new Error(
      ajv.errorsText(
        isSalary.errors!.filter((e: any) => e.keyword !== 'if'),
        { dataVar: 'Salary' },
      ) +
        '\n\n' +
        inspect(value),
    )
  }
}
